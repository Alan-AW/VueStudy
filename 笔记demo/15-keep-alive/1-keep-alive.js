keep-alive 是Vue的一个内置组件，可以使被包含的组件保留状态，或者避免重新渲染

router-view 也是一个组件，如果直接被包在keep-alive里面，所有路径匹配到的视图组件都会被缓存

场景：当用户进入新的某个页面之后再次返回到之前的页面中，那么之前使用到的组件会再次被创建出来，
			离开某个页面的时候，那个页面对应的组件会立即被销毁，如果使用了keep-alive包裹router-View
			该页面就会进入缓存，不会被重复的销毁和创建，这样就能保证用户返回之前的页面的时候保存了之前
			的浏览内容。
			比如：在首页有新闻和消息两个板块，用户进入首页默认展示的是消息页面，当用户离开之后进入了其他的页面
						那么在没有使用keep-alive的情况下，消息页面会被销毁，用户再返回消息页面的时候，消息组件会再次被创建
						使用了keep-alive之后，用户离开当前页面，那么该组件是不会被销毁的，直接进入到缓存了，再次返回当前页面的时候
						消息组件就不会再次创建出来，大大提高了性能。

一、使用方法：
	1.在当前组件中保存一个默认路由：path 作为当前组件的默认展示路由
		data() {
			path: '/home',
			或者
			path: '/home/....'
		}
		如果当前组件包含了子路由的话，需要取消掉子路由的映射关系，不配置自路由的映射关系。
		
	2.在组件中定义两个方法 activated/deactivated
		这两个钩子函数会在当前组件活跃和不活跃的时候调用
		但是这两个方法只在使用了 keep-alive 组件的时候才会生效
		activated() {
			this.$router.push(this.path);  
			/* 当组件处于活跃状态的时候，也就是当前组件对应路由被点击的时候，
				 将上面的子路由push进去
			*/
		}
		
		组件内导航守卫
		beforeRouterLeave(to, from, next) {
			this.path = this.$route.path;
			/*当离开当前组件的时候，记录下当前路由，然后赋值给path进行保存，
			下次再回来的时候又会去调用activated进行push操作*/
		}
